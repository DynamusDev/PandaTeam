{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HeaderButton = HeaderButton;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _headerButton = require(\"./headerButton.presets\");\n\nvar _ramda = require(\"ramda\");\n\nvar _icon = require(\"../icon/icon\");\n\nvar _jsxFileName = \"/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/components/headerButton/headerButton.tsx\";\n\nfunction HeaderButton(props) {\n  var preset = props.preset,\n      tx = props.tx,\n      name = props.name,\n      icon = props.icon,\n      height = props.height,\n      styleOverride = props.style,\n      textStyleOverride = props.textStyle,\n      children = props.children,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"preset\", \"tx\", \"name\", \"icon\", \"height\", \"style\", \"textStyle\", \"children\"]);\n  var viewStyle = (0, _ramda.mergeAll)((0, _ramda.flatten)([_headerButton.viewPresets[preset] || _headerButton.viewPresets.primary, styleOverride]));\n  return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({\n    style: viewStyle\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), name && _react.default.createElement(_icon.Icon, {\n    name: name,\n    style: {\n      height: 32 || {\n        height: height\n      },\n      width: 32\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/components/headerButton/headerButton.tsx"],"names":["HeaderButton","props","preset","tx","name","icon","height","styleOverride","style","textStyleOverride","textStyle","children","rest","viewStyle","viewPresets","primary","width"],"mappings":";;;;;;;;;;;AACA;;AACA;;AAEA;;AAEA;;AACA;;;;AAOO,SAASA,YAAT,CAAsBC,KAAtB,EAA0C;AAAA,MAG7CC,MAH6C,GAY3CD,KAZ2C,CAG7CC,MAH6C;AAAA,MAI7CC,EAJ6C,GAY3CF,KAZ2C,CAI7CE,EAJ6C;AAAA,MAK7CC,IAL6C,GAY3CH,KAZ2C,CAK7CG,IAL6C;AAAA,MAM7CC,IAN6C,GAY3CJ,KAZ2C,CAM7CI,IAN6C;AAAA,MAO7CC,MAP6C,GAY3CL,KAZ2C,CAO7CK,MAP6C;AAAA,MAQtCC,aARsC,GAY3CN,KAZ2C,CAQ7CO,KAR6C;AAAA,MASlCC,iBATkC,GAY3CR,KAZ2C,CAS7CS,SAT6C;AAAA,MAU7CC,QAV6C,GAY3CV,KAZ2C,CAU7CU,QAV6C;AAAA,MAW1CC,IAX0C,0CAY3CX,KAZ2C;AAc/C,MAAMY,SAAS,GAAG,qBAAS,oBAAQ,CAACC,0BAAYZ,MAAZ,KAAuBY,0BAAYC,OAApC,EAA6CR,aAA7C,CAAR,CAAT,CAAlB;AAEA,SACE,6BAAC,6BAAD;AAAkB,IAAA,KAAK,EAAEM;AAAzB,KAAwCD,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEIR,IAAI,IACF,6BAAC,UAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE,MAAM;AAAEA,QAAAA,MAAM,EAANA;AAAF,OAAhB;AAA4BU,MAAAA,KAAK,EAAE;AAAnC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CADF;AAQD","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport React, { useState, useEffect } from \"react\"\nimport { TouchableOpacity } from \"react-native\"\nimport { Text } from \"../text/text\"\nimport { viewPresets, textPresets } from \"./headerButton.presets\"\nimport { ButtonProps } from \"./headerButton.props\"\nimport { mergeAll, flatten } from \"ramda\"\nimport { Icon } from \"../icon/icon\"\n\n/**\n * For your text displaying needs.\n *\n * This component is a HOC over the built-in React Native one.\n */\nexport function HeaderButton(props: ButtonProps) {\n  // grab the props\n  const {\n    preset,\n    tx,\n    name,\n    icon,\n    height,\n    style: styleOverride,\n    textStyle: textStyleOverride,\n    children,\n    ...rest\n  } = props\n\n  const viewStyle = mergeAll(flatten([viewPresets[preset] || viewPresets.primary, styleOverride]))\n\n  return (\n    <TouchableOpacity style={viewStyle} {...rest}>\n      {\n        name &&\n          <Icon name={name} style={{ height: 32 || { height }, width: 32 }} />\n      }\n    </TouchableOpacity>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}
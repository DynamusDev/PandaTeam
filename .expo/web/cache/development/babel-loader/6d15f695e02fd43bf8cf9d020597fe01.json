{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.textPresets = exports.viewPresets = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _theme = require(\"../../theme\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar BASE_VIEW = {\n  flex: 1,\n  height: 32,\n  width: 32,\n  borderRadius: 8,\n  justifyContent: 'center',\n  alignItems: 'center'\n};\nvar BASE_TEXT = {\n  paddingHorizontal: _theme.spacing[3]\n};\nvar viewPresets = {\n  primary: _objectSpread(_objectSpread({}, BASE_VIEW), {}, {\n    backgroundColor: _theme.color.transparent\n  }),\n  link: _objectSpread(_objectSpread({}, BASE_VIEW), {}, {\n    paddingVertical: _theme.spacing[2],\n    paddingHorizontal: _theme.spacing[2],\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  })\n};\nexports.viewPresets = viewPresets;\nvar textPresets = {\n  primary: _objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n    fontSize: 20,\n    color: _theme.color.palette.white\n  }),\n  link: _objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n    color: _theme.color.text,\n    paddingHorizontal: 0,\n    paddingVertical: 0\n  })\n};\nexports.textPresets = textPresets;","map":{"version":3,"sources":["/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/components/headerButton/headerButton.presets.ts"],"names":["BASE_VIEW","flex","height","width","borderRadius","justifyContent","alignItems","BASE_TEXT","paddingHorizontal","spacing","viewPresets","primary","backgroundColor","color","transparent","link","paddingVertical","textPresets","fontSize","palette","white","text"],"mappings":";;;;;;;;;AACA;;;;;;AAMA,IAAMA,SAAoB,GAAG;AAC3BC,EAAAA,IAAI,EAAE,CADqB;AAE3BC,EAAAA,MAAM,EAAE,EAFmB;AAG3BC,EAAAA,KAAK,EAAE,EAHoB;AAI3BC,EAAAA,YAAY,EAAE,CAJa;AAK3BC,EAAAA,cAAc,EAAE,QALW;AAM3BC,EAAAA,UAAU,EAAE;AANe,CAA7B;AASA,IAAMC,SAAoB,GAAG;AAC3BC,EAAAA,iBAAiB,EAAEC,eAAQ,CAAR;AADQ,CAA7B;AAWO,IAAMC,WAAW,GAAG;AAMzBC,EAAAA,OAAO,kCAAOX,SAAP;AAAkBY,IAAAA,eAAe,EAAEC,aAAMC;AAAzC,IANkB;AAWzBC,EAAAA,IAAI,kCACCf,SADD;AAEFgB,IAAAA,eAAe,EAAEP,eAAQ,CAAR,CAFf;AAGFD,IAAAA,iBAAiB,EAAEC,eAAQ,CAAR,CAHjB;AAIFH,IAAAA,UAAU,EAAE,QAJV;AAKFD,IAAAA,cAAc,EAAE;AALd;AAXqB,CAApB;;AAoBA,IAAMY,WAAW,GAAG;AACzBN,EAAAA,OAAO,kCAAOJ,SAAP;AAAkBW,IAAAA,QAAQ,EAAE,EAA5B;AAAgCL,IAAAA,KAAK,EAAEA,aAAMM,OAAN,CAAcC;AAArD,IADkB;AAEzBL,EAAAA,IAAI,kCACCR,SADD;AAEFM,IAAAA,KAAK,EAAEA,aAAMQ,IAFX;AAGFb,IAAAA,iBAAiB,EAAE,CAHjB;AAIFQ,IAAAA,eAAe,EAAE;AAJf;AAFqB,CAApB","sourcesContent":["import { ViewStyle, TextStyle } from \"react-native\"\nimport { color, spacing } from \"../../theme\"\nimport { ButtonProps } from \"./button.props\"\n\n/**\n * All text will start off looking like this.\n */\nconst BASE_VIEW: ViewStyle = {\n  flex: 1,\n  height: 32,\n  width: 32,\n  borderRadius: 8,\n  justifyContent: 'center',\n  alignItems: 'center',\n}\n\nconst BASE_TEXT: TextStyle = {\n  paddingHorizontal: spacing[3],\n\n}\n\n/**\n * All the variations of text styling within the app.\n *\n * You want to customize these to whatever you need in your app.\n */\n\nexport const viewPresets = {\n\n  /**\n   * A smaller piece of secondard information.\n   */\n\n  primary: { ...BASE_VIEW, backgroundColor: color.transparent } as ViewStyle,\n\n  /**\n   * A button without extras.\n   */\n  link: {\n    ...BASE_VIEW,\n    paddingVertical: spacing[2],\n    paddingHorizontal: spacing[2],\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  } as ViewStyle,\n}\n\nexport const textPresets = {\n  primary: { ...BASE_TEXT, fontSize: 20, color: color.palette.white } as TextStyle,\n  link: {\n    ...BASE_TEXT,\n    color: color.text,\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n  } as TextStyle,\n}\n\n/**\n * A list of preset names.\n */\n\nexport type ButtonPresetNames = keyof typeof viewPresets\n"]},"metadata":{},"sourceType":"script"}
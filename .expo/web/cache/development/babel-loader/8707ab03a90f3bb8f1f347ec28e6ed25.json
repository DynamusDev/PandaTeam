{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAuth = useAuth;\nexports.AuthProvider = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _api = _interopRequireDefault(require(\"../services/api\"));\n\nvar _jsxFileName = \"/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/hooks/auth.js\";\nvar AuthContext = (0, _react.createContext)({});\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(true),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    function loadStorageData() {\n      var _await$AsyncStorage$m, _await$AsyncStorage$m2, user;\n\n      return _regenerator.default.async(function loadStorageData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_asyncStorage.default.multiGet(['@panda:user']));\n\n            case 2:\n              _await$AsyncStorage$m = _context.sent;\n              _await$AsyncStorage$m2 = (0, _slicedToArray2.default)(_await$AsyncStorage$m, 1);\n              user = _await$AsyncStorage$m2[0];\n\n              if (user[1]) {\n                setData({\n                  user: JSON.parse(user[1])\n                });\n              }\n\n              setLoading(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadStorageData();\n  }, []);\n  var signIn = (0, _react.useCallback)(function _callee(_ref2) {\n    var email, password, response, user;\n    return _regenerator.default.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n            _context2.next = 3;\n            return _regenerator.default.awrap(_api.default.post('/login', {\n              email: email,\n              password: password\n            }));\n\n          case 3:\n            response = _context2.sent;\n            user = response.data.user;\n            _context2.next = 7;\n            return _regenerator.default.awrap(_asyncStorage.default.multiSet([['@panda:user', JSON.stringify(user)]]));\n\n          case 7:\n            setData({\n              user: user\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var updateUser = (0, _react.useCallback)(function _callee2(data) {\n    var response, user;\n    return _regenerator.default.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regenerator.default.awrap(_api.default.post(\"edit_user?id_account=\" + data.id, data));\n\n          case 2:\n            response = _context3.sent;\n            user = response.data.user;\n            _context3.next = 6;\n            return _regenerator.default.awrap(_asyncStorage.default.multiSet([['@panda:user', JSON.stringify(user)]]));\n\n          case 6:\n            setData({\n              user: user\n            });\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var sendMail = (0, _react.useCallback)(function _callee3(_ref3) {\n    var email, cpf, response;\n    return _regenerator.default.async(function _callee3$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            email = _ref3.email, cpf = _ref3.cpf;\n            _context4.next = 3;\n            return _regenerator.default.awrap(_api.default.post('forgot_password', {\n              email: email\n            }));\n\n          case 3:\n            response = _context4.sent;\n\n            if (!(response.data.status === 400)) {\n              _context4.next = 6;\n              break;\n            }\n\n            throw new Error('Email nāo encontrado');\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var signOut = (0, _react.useCallback)(function _callee4() {\n    return _regenerator.default.async(function _callee4$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regenerator.default.awrap(_asyncStorage.default.multiRemove(['@panda:user', '@panda:cart', '@panda:card']));\n\n          case 2:\n            setData({});\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _react.default.createElement(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      loading: loading,\n      signIn: signIn,\n      signOut: signOut,\n      sendMail: sendMail,\n      updateUser: updateUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexports.AuthProvider = AuthProvider;\n\nfunction useAuth() {\n  var context = (0, _react.useContext)(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}","map":{"version":3,"sources":["/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/hooks/auth.js"],"names":["AuthContext","AuthProvider","children","data","setData","loading","setLoading","loadStorageData","AsyncStorage","multiGet","user","JSON","parse","signIn","email","password","api","post","response","multiSet","stringify","updateUser","id","sendMail","cpf","status","Error","signOut","multiRemove","useAuth","context"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useState,\n  useContext,\n  useEffect,\n} from 'react';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nimport api from '../services/api';\n\nconst AuthContext = createContext({});\n\nconst AuthProvider = ({ children }) => {\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function loadStorageData() {\n      const [/*token,*/ user] = await AsyncStorage.multiGet([\n        // '@donali:token',\n        '@panda:user',\n      ]);\n\n      if (/*token[1] &&*/ user[1]) {\n        setData({ /*token: token[1],*/ user: JSON.parse(user[1]) });\n      }\n\n      setLoading(false);\n    }\n\n    loadStorageData();\n  }, []);\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('/login', {\n      email,\n      password,\n    });\n\n    const user = response.data.user;\n\n    await AsyncStorage.multiSet([\n      // ['@RapChef:token', token],\n      ['@panda:user', JSON.stringify(user)],\n    ]);\n\n    setData({ /*token,*/ user });\n  }, []);\n\n  const updateUser = useCallback(async (data) => {\n    const response = await api.post(`edit_user?id_account=${data.id}`, data);\n\n    const { /*token,*/ user } = response.data;\n\n    await AsyncStorage.multiSet([\n      // ['@donali:token', token],\n      ['@panda:user', JSON.stringify(user)],\n    ]);\n\n    setData({ /*token,*/ user });\n  }, []);\n\n  const sendMail = useCallback(async ({ email, cpf }) => {\n    const response = await api.post('forgot_password', {\n      email\n    });\n\n    if ( response.data.status === 400 ) {\n      throw new Error('Email nāo encontrado');\n    }\n  }, []);\n\n  const signOut = useCallback(async () => {\n    await AsyncStorage.multiRemove([/*'@donali:token', */'@panda:user', '@panda:cart', '@panda:card']);\n\n    setData({});\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, loading, signIn, signOut, sendMail, updateUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth() {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"script"}
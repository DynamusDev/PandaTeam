{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = Button;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _text = require(\"../text/text\");\n\nvar _button = require(\"./button.presets\");\n\nvar _ramda = require(\"ramda\");\n\nvar _icon = require(\"../icon/icon\");\n\nvar _jsxFileName = \"/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/components/button/button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Button(props) {\n  var preset = props.preset,\n      tx = props.tx,\n      name = props.name,\n      icon = props.icon,\n      background = props.background,\n      styleOverride = props.style,\n      textStyleOverride = props.textStyle,\n      children = props.children,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"preset\", \"tx\", \"name\", \"icon\", \"background\", \"style\", \"textStyle\", \"children\"]);\n  var viewStyle = (0, _ramda.mergeAll)((0, _ramda.flatten)([_button.viewPresets[preset] || _button.viewPresets.primary, styleOverride]));\n  var textStyle = (0, _ramda.mergeAll)((0, _ramda.flatten)([_button.textPresets[preset] || _button.textPresets.primary, textStyleOverride]));\n  return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({\n    style: _objectSpread(_objectSpread({}, viewStyle), {}, {\n      backgroundColor: background\n    })\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), name && _react.default.createElement(_icon.Icon, {\n    name: name,\n    style: {\n      height: 40,\n      width: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), name && _react.default.createElement(_text.Text, {\n    tx: tx,\n    text: name,\n    style: textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/components/button/button.tsx"],"names":["Button","props","preset","tx","name","icon","background","styleOverride","style","textStyleOverride","textStyle","children","rest","viewStyle","viewPresets","primary","textPresets","backgroundColor","height","width"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAOO,SAASA,MAAT,CAAgBC,KAAhB,EAAoC;AAAA,MAGvCC,MAHuC,GAYrCD,KAZqC,CAGvCC,MAHuC;AAAA,MAIvCC,EAJuC,GAYrCF,KAZqC,CAIvCE,EAJuC;AAAA,MAKvCC,IALuC,GAYrCH,KAZqC,CAKvCG,IALuC;AAAA,MAMvCC,IANuC,GAYrCJ,KAZqC,CAMvCI,IANuC;AAAA,MAOvCC,UAPuC,GAYrCL,KAZqC,CAOvCK,UAPuC;AAAA,MAQhCC,aARgC,GAYrCN,KAZqC,CAQvCO,KARuC;AAAA,MAS5BC,iBAT4B,GAYrCR,KAZqC,CASvCS,SATuC;AAAA,MAUvCC,QAVuC,GAYrCV,KAZqC,CAUvCU,QAVuC;AAAA,MAWpCC,IAXoC,0CAYrCX,KAZqC;AAczC,MAAMY,SAAS,GAAG,qBAAS,oBAAQ,CAACC,oBAAYZ,MAAZ,KAAuBY,oBAAYC,OAApC,EAA6CR,aAA7C,CAAR,CAAT,CAAlB;AACA,MAAMG,SAAS,GAAG,qBAChB,oBAAQ,CAACM,oBAAYd,MAAZ,KAAuBc,oBAAYD,OAApC,EAA6CN,iBAA7C,CAAR,CADgB,CAAlB;AAMA,SACE,6BAAC,6BAAD;AAAkB,IAAA,KAAK,kCAAMI,SAAN;AAAiBI,MAAAA,eAAe,EAACX;AAAjC;AAAvB,KAA0EM,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEMR,IAAI,IACJ,6BAAC,UAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,KAAK,EAAE;AAACc,MAAAA,MAAM,EAAC,EAAR;AAAYC,MAAAA,KAAK,EAAC;AAAlB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,EAMMf,IAAI,IACJ,6BAAC,UAAD;AAAM,IAAA,EAAE,EAAED,EAAV;AAAc,IAAA,IAAI,EAAEC,IAApB;AAA0B,IAAA,KAAK,EAAEM,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN,CADF;AAaD","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport { TouchableOpacity } from \"react-native\"\nimport { Text } from \"../text/text\"\nimport { viewPresets, textPresets } from \"./button.presets\"\nimport { ButtonProps } from \"./button.props\"\nimport { mergeAll, flatten } from \"ramda\"\nimport { Icon } from \"../icon/icon\"\n\n/**\n * For your text displaying needs.\n *\n * This component is a HOC over the built-in React Native one.\n */\nexport function Button(props: ButtonProps) {\n  // grab the props\n  const {\n    preset,\n    tx,\n    name,\n    icon,\n    background,\n    style: styleOverride,\n    textStyle: textStyleOverride,\n    children,\n    ...rest\n  } = props\n\n  const viewStyle = mergeAll(flatten([viewPresets[preset] || viewPresets.primary, styleOverride]))\n  const textStyle = mergeAll(\n    flatten([textPresets[preset] || textPresets.primary, textStyleOverride]),\n  )\n\n\n\n  return (\n    <TouchableOpacity style={{...viewStyle, backgroundColor:background} } {...rest}>\n      {\n          name &&\n          <Icon name={name} style={{height:40, width:40}} />\n        }\n        {\n          name &&\n          <Text tx={tx} text={name} style={textStyle} />\n        }\n      \n    </TouchableOpacity>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}
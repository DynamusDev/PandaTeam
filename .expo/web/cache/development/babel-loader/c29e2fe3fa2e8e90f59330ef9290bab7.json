{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _mobxReactLite = require(\"mobx-react-lite\");\n\nvar _components = require(\"../../components\");\n\nvar _theme = require(\"../../theme\");\n\nvar _api = require(\"../../services/api\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _reactNativeLoadingSpinnerOverlay = _interopRequireDefault(require(\"react-native-loading-spinner-overlay\"));\n\nvar _jsxFileName = \"/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/screens/users/users.tsx\";\nvar FULL = {\n  flex: 1,\n  backgroundColor: '#fff'\n};\nvar CONTAINER = {\n  flex: 1\n};\nvar CONTENT = {\n  flex: 1,\n  backgroundColor: '#fff',\n  alignItems: 'center',\n  justifyContent: 'center'\n};\nvar USERLIST = {\n  flex: 1,\n  width: '100%'\n};\nvar CENTEREDVIEW = {\n  flex: 1,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginTop: 22\n};\nvar MODALVIEW = {\n  margin: 20,\n  backgroundColor: \"#00368E\",\n  borderRadius: 20,\n  width: 300,\n  height: 400,\n  alignItems: \"center\",\n  shadowColor: \"#000\",\n  shadowOffset: {\n    width: 0,\n    height: 2\n  },\n  shadowOpacity: 0.25,\n  shadowRadius: 3.84,\n  elevation: 5\n};\nvar BOLD = {\n  fontWeight: \"bold\"\n};\nvar HEADER = {\n  paddingTop: _theme.spacing[3],\n  paddingBottom: _theme.spacing[3],\n  paddingHorizontal: _theme.spacing[3],\n  backgroundColor: _theme.color.palette.cyan\n};\nvar HEADER_TITLE = {\n  fontSize: 18,\n  textAlign: \"center\",\n  letterSpacing: 1.5\n};\nvar INPUT = {\n  height: 45,\n  width: 280,\n  borderRadius: 8,\n  textAlign: 'center',\n  fontSize: 22,\n  marginTop: 12,\n  backgroundColor: '#E2E2E0'\n};\nvar ALERTCENTERED = {\n  flex: 1,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginTop: 22\n};\nvar ALERTTEXT = {\n  marginBottom: 15,\n  textAlign: \"center\",\n  fontWeight: '600',\n  fontSize: 20,\n  color: _theme.color.palette.lightGrey\n};\nvar ALERTVIEW = {\n  margin: 20,\n  backgroundColor: _theme.color.palette.white,\n  borderRadius: 20,\n  width: '90%',\n  height: 'auto',\n  borderWidth: 1,\n  borderColor: _theme.color.palette.lightGrey,\n  padding: 20,\n  alignItems: \"center\",\n  shadowColor: \"#000\",\n  shadowOffset: {\n    width: 0,\n    height: 2\n  },\n  shadowOpacity: 0.25,\n  shadowRadius: 3.84,\n  elevation: 5\n};\nvar HEADERMODAL = {\n  height: '10%',\n  width: '100%',\n  alignItems: 'flex-end',\n  justifyContent: 'center',\n  marginBottom: 20\n};\n\nvar timeToString = function timeToString(time) {\n  var date = new Date(time);\n  return date.toISOString().split('T')[0];\n};\n\nvar Users = (0, _mobxReactLite.observer)(function Users() {\n  var navigation = (0, _native.useNavigation)();\n\n  var goBack = function goBack() {\n    return navigation.goBack();\n  };\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      admin = _useState6[0],\n      setAdmin = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      spinner = _useState8[0],\n      setSpinner = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      modalVisible = _useState10[0],\n      setModalVisible = _useState10[1];\n\n  var _useState11 = (0, _react.useState)([]),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      users = _useState12[0],\n      setUsers = _useState12[1];\n\n  var _useState13 = (0, _react.useState)([]),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      user = _useState14[0],\n      setUser = _useState14[1];\n\n  var hoje = new Date();\n  var isDrawerOpen = (0, _drawer.useIsDrawerOpen)();\n\n  function handleSubmit() {\n    var response;\n    return _regenerator.default.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name === '')) {\n              _context.next = 4;\n              break;\n            }\n\n            _reactNative.Alert.alert('Erro ao registrar!', 'Por favor, informe o nome do membro para continuarmos com o registro');\n\n            _context.next = 21;\n            break;\n\n          case 4:\n            if (!(email === '')) {\n              _context.next = 8;\n              break;\n            }\n\n            _reactNative.Alert.alert('Erro ao registrar!', 'Por favor, informe o email do membro para continuarmos com o registro');\n\n            _context.next = 21;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            setSpinner(true);\n            _context.next = 12;\n            return _regenerator.default.awrap(_api.api.post('sign_up', {\n              name: name,\n              email: email,\n              admin: admin\n            }));\n\n          case 12:\n            response = _context.sent;\n\n            if (response.data.status === 200) {\n              _reactNative.Alert.alert('Sucesso!!!', response.data.message);\n\n              setEmail('');\n              setName('');\n              setAdmin(false);\n              setSpinner(false);\n            } else if (response.data.status === 400) {\n              setSpinner(false);\n\n              _reactNative.Alert.alert('Erro ao registrar!!!', response.data.error);\n            } else if (response.data.status === 401) {\n              setSpinner(false);\n\n              _reactNative.Alert.alert('Erro ao registrar!!!', response.data.error);\n            }\n\n            _context.next = 21;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](8);\n            console.log(_context.t0);\n\n            _reactNative.Alert.alert('Erro ao registrar!!!', 'Tente novamente');\n\n            setSpinner(false);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[8, 16]], Promise);\n  }\n\n  (0, _react.useEffect)(function () {\n    function retrieveData() {\n      var myArray, usuário, response;\n      return _regenerator.default.async(function retrieveData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('user'));\n\n            case 2:\n              myArray = _context2.sent;\n\n              if (myArray !== null) {\n                usuário = JSON.parse(myArray);\n                setUser(usuário);\n              }\n\n              _context2.next = 6;\n              return _regenerator.default.awrap(_api.api.get('users'));\n\n            case 6:\n              response = _context2.sent;\n              setUsers(response.data.users);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    ;\n    retrieveData();\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: FULL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Modal, {\n    visible: modalVisible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {\n      setModalVisible(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: CENTEREDVIEW,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: MODALVIEW,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }))), _react.default.createElement(_reactNativeLoadingSpinnerOverlay.default, {\n    visible: spinner,\n    textContent: 'Loading...',\n    animation: 'slide',\n    textStyle: {\n      color: '#FFF'\n    },\n    overlayColor: 'rgba(0,0,0,0.80)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_components.Screen, {\n    style: CONTAINER,\n    preset: \"scroll\",\n    statusBar: \"light-content\",\n    barBackground: isDrawerOpen ? _theme.color.palette.green : _theme.color.palette.cyan,\n    backgroundColor: _theme.color.palette.cyan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_components.Header, {\n    headerText: \"Panda Team!!! \",\n    style: HEADER,\n    titleStyle: HEADER_TITLE,\n    rightIcon: \"menu\",\n    onRightPress: function onRightPress() {\n      navigation.openDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: CONTENT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    data: users,\n    style: USERLIST,\n    contentContainerStyle: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    showsVerticalScrollIndicator: false,\n    keyExtractor: function keyExtractor(user) {\n      return String(user);\n    },\n    renderItem: function renderItem(_ref) {\n      var users = _ref.item;\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          maxHeight: 100,\n          alignItems: 'center',\n          backgroundColor: '#E6E7E8',\n          marginTop: 15,\n          width: 350,\n          borderRadius: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {},\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          paddingHorizontal: 5,\n          paddingVertical: 5,\n          borderRadius: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: {\n          width: 60,\n          height: 60,\n          borderRadius: 30,\n          borderColor: '#000',\n          marginRight: 20\n        },\n        source: {\n          uri: \"data:image/gif;base64,\" + users.avatar\n        },\n        resizeMode: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_components.Text, {\n        style: {\n          color: '#58595B',\n          fontSize: 20,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, users.name), _react.default.createElement(_components.Text, {\n        style: {\n          color: '#58595B',\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }\n      }, users.email))), user.admin === true ? _react.default.createElement(_reactNative.View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: {\n          height: 30,\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '20%'\n        },\n        onPress: function onPress() {\n          _reactNative.Alert.alert('teste', 'teste');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_components.Text, {\n        style: {\n          color: '#58595B',\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }\n      }, \"editar\")), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: {\n          height: 30,\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '20%'\n        },\n        onPress: function onPress() {\n          _reactNative.Alert.alert('teste', 'teste');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_components.Text, {\n        style: {\n          color: '#58595B',\n          fontSize: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }, \"excluir\"))) : null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }))));\n});\nexports.Users = Users;","map":{"version":3,"sources":["/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/screens/users/users.tsx"],"names":["FULL","flex","backgroundColor","CONTAINER","CONTENT","alignItems","justifyContent","USERLIST","width","CENTEREDVIEW","marginTop","MODALVIEW","margin","borderRadius","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","BOLD","fontWeight","HEADER","paddingTop","spacing","paddingBottom","paddingHorizontal","color","palette","cyan","HEADER_TITLE","fontSize","textAlign","letterSpacing","INPUT","ALERTCENTERED","ALERTTEXT","marginBottom","lightGrey","ALERTVIEW","white","borderWidth","borderColor","padding","HEADERMODAL","timeToString","time","date","Date","toISOString","split","Users","navigation","goBack","email","setEmail","name","setName","admin","setAdmin","spinner","setSpinner","modalVisible","setModalVisible","users","setUsers","user","setUser","hoje","isDrawerOpen","handleSubmit","Alert","alert","api","post","response","data","status","message","error","console","log","retrieveData","AsyncStorage","getItem","myArray","usuário","JSON","parse","get","green","openDrawer","String","item","maxHeight","flexDirection","paddingVertical","marginRight","uri","avatar"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { \n          Image, \n          ImageStyle, \n          Platform, \n          TextStyle, \n          View, \n          ViewStyle, \n          AsyncStorage, \n          Alert, \n          TouchableOpacity, \n          TextInput,\n          FlatList, Modal\n        } from \"react-native\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { observer } from \"mobx-react-lite\"\nimport { BulletItem, Button, Header, Text, Screen, Wallpaper, Icon, CommonButton } from \"../../components\"\nimport { color, spacing } from \"../../theme\"\nimport { api } from \"../../services/api\"\nimport { save } from \"../../utils/storage\"\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport CheckBox from 'react-native-check-box'\nimport Spinner from 'react-native-loading-spinner-overlay'\n\nconst FULL: ViewStyle = { flex: 1, backgroundColor: '#fff', }\nconst CONTAINER: ViewStyle = {\n  flex: 1,\n}\nconst CONTENT: ViewStyle = {\n  flex: 1,\n  backgroundColor: '#fff',\n  alignItems: 'center',\n  justifyContent: 'center'\n}\nconst USERLIST: ViewStyle = {\n  flex:1,\n  width:'100%',\n}\nconst CENTEREDVIEW: ViewStyle = {\n  flex: 1,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginTop: 22\n}\nconst MODALVIEW: ViewStyle = {\n  margin: 20,\n  backgroundColor: \"#00368E\",\n  borderRadius: 20,\n  width:300,\n  height:400,\n  alignItems: \"center\",\n  shadowColor: \"#000\",\n  shadowOffset: {\n    width: 0,\n    height: 2\n  },\n  shadowOpacity: 0.25,\n  shadowRadius: 3.84,\n  elevation: 5\n}\nconst BOLD: TextStyle = { fontWeight: \"bold\" }\nconst HEADER: TextStyle = {\n  paddingTop: spacing[3],\n  paddingBottom: spacing[3] ,\n  paddingHorizontal: spacing[3],\n  backgroundColor: color.palette.cyan\n}\nconst HEADER_TITLE: TextStyle = {\n  fontSize: 18,\n  textAlign: \"center\",\n  letterSpacing: 1.5,\n}\nconst INPUT: TextStyle = {\n  height: 45,\n  width: 280,\n  borderRadius: 8,\n  textAlign: 'center',\n  fontSize: 22,\n  marginTop: 12,\n  backgroundColor: '#E2E2E0'\n}\n\nconst ALERTCENTERED: ViewStyle = {\n  flex: 1,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginTop: 22\n}\nconst ALERTTEXT: TextStyle = {\n  marginBottom: 15,\n  textAlign: \"center\",\n  fontWeight: '600',\n  fontSize: 20,\n  color: color.palette.lightGrey\n}\nconst ALERTVIEW: ViewStyle = {\n  margin: 20,\n  backgroundColor: color.palette.white,\n  borderRadius: 20,\n  width: '90%',\n  height: 'auto',\n  borderWidth: 1,\n  borderColor: color.palette.lightGrey,\n  padding: 20,\n  alignItems: \"center\",\n  shadowColor: \"#000\",\n  shadowOffset: {\n    width: 0,\n    height: 2\n  },\n  shadowOpacity: 0.25,\n  shadowRadius: 3.84,\n  elevation: 5\n}\nconst HEADERMODAL: ViewStyle = {\n  height: '10%',\n  width: '100%',\n  alignItems: 'flex-end',\n  justifyContent: 'center',\n  marginBottom: 20\n}\n\nconst timeToString = (time) => {\n  const date = new Date(time);\n  return date.toISOString().split('T')[0];\n}\n\nexport const Users = observer(function Users() {\n  const navigation = useNavigation()\n  const goBack = () => navigation.goBack()\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [admin, setAdmin] = useState(false)\n  const [spinner, setSpinner] = useState(false)\n  const [modalVisible, setModalVisible] = useState(false);\n  const [users, setUsers] = useState([])\n  const [user, setUser] = useState([])\n  const hoje = new Date()\n  const isDrawerOpen = useIsDrawerOpen()\n\n  async function handleSubmit() {\n    if(name === '') {\n      Alert.alert('Erro ao registrar!', 'Por favor, informe o nome do membro para continuarmos com o registro')\n    }else if(email === '') {\n      Alert.alert('Erro ao registrar!', 'Por favor, informe o email do membro para continuarmos com o registro')\n    }else{\n      try {\n        setSpinner(true)\n        const response = await api.post('sign_up', {\n          name,\n          email,\n          admin\n        })\n        if(response.data.status === 200) {\n          Alert.alert('Sucesso!!!', response.data.message)\n          setEmail('')\n          setName('')\n          setAdmin(false)\n          setSpinner(false)\n        }else if(response.data.status === 400){\n          setSpinner(false)\n          Alert.alert('Erro ao registrar!!!', response.data.error)\n        }else if(response.data.status === 401){\n          setSpinner(false)\n          Alert.alert('Erro ao registrar!!!', response.data.error)\n        }\n\n      } catch (err) {\n        console.log(err)\n        Alert.alert('Erro ao registrar!!!', 'Tente novamente')\n        setSpinner(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    async function retrieveData() {\n      const myArray = await AsyncStorage.getItem('user')\n      if (myArray !== null) {\n        // We have data!!\n        const usuário = JSON.parse(myArray)\n        setUser(usuário)\n      }\n      const response = await api.get('users')\n      setUsers(response.data.users)\n    };\n    retrieveData()\n  }, [])\n\n  return (\n    <View style={FULL}>\n      <Modal\n        visible={modalVisible}\n        transparent={true}\n        animationType={\"fade\"}\n        onRequestClose={ () => { setModalVisible(false)} } >\n        <View style={CENTEREDVIEW}>\n          <View style={MODALVIEW}>\n            \n          </View>\n        </View>\n      </Modal>\n      <Spinner\n        visible={spinner}\n        textContent={'Loading...'}\n        animation={'slide'}\n        textStyle={{ color: '#FFF' }}\n        overlayColor={'rgba(0,0,0,0.80)'}\n      />\n      <Screen style={CONTAINER} preset=\"scroll\" statusBar='light-content' barBackground={isDrawerOpen ? (color.palette.green) : color.palette.cyan} backgroundColor={color.palette.cyan}>\n        <Header\n          headerText='Panda Team!!! '\n          style={HEADER}\n          titleStyle={HEADER_TITLE}\n          rightIcon='menu'\n          onRightPress={()=>{navigation.openDrawer()}}\n        />\n        <View style={CONTENT}>\n        <FlatList\n            data={ users }\n            style={USERLIST}\n            contentContainerStyle={{\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n            showsVerticalScrollIndicator={false}\n            keyExtractor={user => String(user)}\n            renderItem={({item:users}) => (\n              <View style={{\n                maxHeight: 100,\n                alignItems: 'center', \n                backgroundColor:'#E6E7E8',\n                marginTop: 15,\n                width: 350,\n                borderRadius: 10,\n                }}>\n                <TouchableOpacity\n                  onPress={() => {  }}\n                  style={{\n                          flexDirection:'row',\n                          alignItems:'center',\n                          paddingHorizontal:5,\n                          paddingVertical: 5,\n                          borderRadius: 10,\n                          }}>\n                      <Image\n                        style={{width:60,\n                                height:60,\n                                borderRadius:30,\n                                borderColor:'#000',\n                                marginRight: 20, }}\n                        source={{uri: `data:image/gif;base64,${users.avatar}`}}\n                        resizeMode='contain'/>\n                      <View>\n                        <Text style={{color:'#58595B', fontSize:20, fontWeight:'bold' }}>{users.name}</Text>\n                        <Text style={{color:'#58595B', fontSize:15 }}>{users.email}</Text>\n                      </View>\n                </TouchableOpacity>\n              {user.admin === true ? (\n                <View style={{flexDirection: 'row'}}>\n                  <TouchableOpacity \n                    style={{\n                      height: 30, \n                      alignItems: 'center', \n                      justifyContent: 'center',\n                      width: '20%',\n                    }}\n                    onPress={()=>{Alert.alert('teste', 'teste')}}\n                  >\n                    <Text style={{color:'#58595B', fontSize:15 }}>editar</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity \n                    style={{\n                      height: 30, \n                      alignItems: 'center', \n                      justifyContent: 'center',\n                      width: '20%',\n                    }}\n                    onPress={()=>{Alert.alert('teste', 'teste')}}\n                  >\n                    <Text style={{color:'#58595B', fontSize:15 }}>excluir</Text>\n                  </TouchableOpacity>\n                </View>\n                ) : null\n              }\n              </View>\n            )}\n          />\n        </View>\n      </Screen>\n    </View>\n  )\n})"]},"metadata":{},"sourceType":"script"}
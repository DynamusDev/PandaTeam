{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Drawer = Drawer;\nexports.PrimaryNavigator = PrimaryNavigator;\nexports.canExit = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _Feather = _interopRequireDefault(require(\"@expo/vector-icons/Feather\"));\n\nvar _screens = require(\"../screens\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _color = require(\"../theme/color\");\n\nvar ImagePicker = _interopRequireWildcard(require(\"expo-image-picker\"));\n\nvar _expoConstants = _interopRequireDefault(require(\"expo-constants\"));\n\nvar Permissions = _interopRequireWildcard(require(\"expo-permissions\"));\n\nvar _api = require(\"../services/api\");\n\nvar _jsxFileName = \"/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/navigation/primary-navigator.tsx\";\nvar Stack = (0, _stack.createStackNavigator)();\nvar Draw = (0, _drawer.createDrawerNavigator)();\n\nfunction Drawer() {\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var navigation = (0, _native.useNavigation)();\n\n  function logout() {\n    _asyncStorage.default.clear();\n\n    navigation.navigate('welcome');\n  }\n\n  ;\n  (0, _react.useEffect)(function () {\n    function retrieveData() {\n      var myArray, usuário;\n      return _regenerator.default.async(function retrieveData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_asyncStorage.default.getItem('user'));\n\n            case 2:\n              myArray = _context.sent;\n\n              if (myArray !== null) {\n                usuário = JSON.parse(myArray);\n                setUser(usuário);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    ;\n    retrieveData();\n  }, []);\n\n  var getPermissionAsync = function getPermissionAsync() {\n    var _await$Permissions$as, status;\n\n    return _regenerator.default.async(function getPermissionAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!_expoConstants.default.platform.ios) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regenerator.default.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 3:\n            _await$Permissions$as = _context2.sent;\n            status = _await$Permissions$as.status;\n\n            if (status !== 'granted') {\n              _reactNative.Alert.alert('Sorry, we need camera roll permissions to make this work!');\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _pickImage = function _pickImage() {\n    var result, value, response, data;\n    return _regenerator.default.async(function _pickImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regenerator.default.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0,\n              base64: true\n            }));\n\n          case 3:\n            result = _context3.sent;\n\n            if (result.cancelled) {\n              _context3.next = 23;\n              break;\n            }\n\n            _context3.prev = 5;\n            _context3.next = 8;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('id'));\n\n          case 8:\n            value = _context3.sent;\n\n            if (!(value != null)) {\n              _context3.next = 18;\n              break;\n            }\n\n            _context3.next = 12;\n            return _regenerator.default.awrap(_api.api.put(\"/updateImage/\" + user.id, {\n              avatar: result.base64\n            }));\n\n          case 12:\n            response = _context3.sent;\n\n            _reactNative.Alert.alert('Sucesso!!!', response.data.message);\n\n            _context3.next = 16;\n            return _regenerator.default.awrap(_api.api.get(\"users/\" + user.id));\n\n          case 16:\n            data = _context3.sent;\n            setUser(response.data.user);\n\n          case 18:\n            _context3.next = 23;\n            break;\n\n          case 20:\n            _context3.prev = 20;\n            _context3.t0 = _context3[\"catch\"](5);\n            console.log(_context3.t0);\n\n          case 23:\n            _context3.next = 28;\n            break;\n\n          case 25:\n            _context3.prev = 25;\n            _context3.t1 = _context3[\"catch\"](0);\n            console.log(_context3.t1);\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 25], [5, 20]], Promise);\n  };\n\n  var customDrawerComponent = function customDrawerComponent(props) {\n    return _react.default.createElement(_reactNative.SafeAreaView, {\n      style: {\n        flex: 1,\n        backgroundColor: _color.color.palette.green\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, _react.default.createElement(_reactNativeGestureHandler.ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: {\n        width: '100%',\n        height: 80,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n      onPress: _pickImage,\n      style: {\n        width: 80,\n        height: 80,\n        borderRadius: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, _react.default.createElement(_reactNative.Image, {\n      style: {\n        width: 80,\n        height: 80,\n        borderRadius: 50\n      },\n      source: {\n        uri: \"data:image/gif;base64,\" + user.avatar\n      },\n      resizeMode: \"contain\",\n      resizeMethod: \"scale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }))), _react.default.createElement(_drawer.DrawerItemList, (0, _extends2.default)({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    })), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n      onPress: function onPress() {},\n      style: {\n        height: 40,\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        width: '100%',\n        paddingHorizontal: 17,\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_Feather.default, {\n      name: \"dollar-sign\",\n      size: 25,\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), _react.default.createElement(_reactNative.Text, {\n      style: {\n        color: '#fff',\n        fontWeight: '500',\n        height: '100%',\n        marginTop: 5,\n        marginLeft: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"Entradas\")), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n      onPress: logout,\n      style: {\n        height: 40,\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        width: '100%',\n        paddingHorizontal: 17,\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_Feather.default, {\n      name: \"log-out\",\n      size: 25,\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), _react.default.createElement(_reactNative.Text, {\n      style: {\n        color: '#fff',\n        fontWeight: '500',\n        height: '100%',\n        marginTop: 5,\n        marginLeft: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Sair\"))));\n  };\n\n  return _react.default.createElement(Draw.Navigator, {\n    initialRouteName: \"home\",\n    drawerPosition: \"right\",\n    drawerContent: customDrawerComponent,\n    drawerContentOptions: {\n      activeTintColor: '#fff',\n      inactiveTintColor: '#fff',\n      activeBackgroundColor: _color.color.palette.cyan,\n      itemStyle: {\n        marginVertical: 5,\n        alignItems: \"flex-start\",\n        justifyContent: \"center\"\n      },\n      labelStyle: {\n        color: '#fff',\n        marginTop: 5\n      },\n      contentContainerStyle: {\n        justifyContent: 'center'\n      }\n    },\n    drawerStyle: {\n      width: '65%'\n    },\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        drawerIcon: function drawerIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'home') {\n            iconName = 'home';\n          } else if (route.name === 'signUp') {\n            iconName = 'user-plus';\n          } else if (route.name === 'users') {\n            iconName = 'users';\n          }\n\n          return _react.default.createElement(_Feather.default, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Draw.Screen, {\n    name: \"home\",\n    options: {\n      title: 'Início'\n    },\n    component: _screens.DemoScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Draw.Screen, {\n    name: \"signUp\",\n    options: {\n      title: 'Registrar Membro'\n    },\n    component: _screens.SignUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Draw.Screen, {\n    name: \"users\",\n    options: {\n      title: 'Panda Team'\n    },\n    component: _screens.Users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction PrimaryNavigator() {\n  return _react.default.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"welcome\",\n    component: _screens.WelcomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"drawer\",\n    component: Drawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar exitRoutes = [\"welcome\"];\n\nvar canExit = function canExit(routeName) {\n  return exitRoutes.includes(routeName);\n};\n\nexports.canExit = canExit;","map":{"version":3,"sources":["/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/navigation/primary-navigator.tsx"],"names":["Stack","Draw","Drawer","user","setUser","navigation","logout","AsyncStorage","clear","navigate","retrieveData","getItem","myArray","usuário","JSON","parse","getPermissionAsync","Constants","platform","ios","Permissions","askAsync","CAMERA_ROLL","status","Alert","alert","_pickImage","ImagePicker","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","base64","result","cancelled","value","api","put","id","avatar","response","data","message","get","console","log","customDrawerComponent","props","flex","backgroundColor","color","palette","green","width","height","alignItems","justifyContent","marginBottom","borderRadius","uri","flexDirection","paddingHorizontal","marginTop","fontWeight","marginLeft","activeTintColor","inactiveTintColor","activeBackgroundColor","cyan","itemStyle","marginVertical","labelStyle","contentContainerStyle","route","drawerIcon","size","iconName","name","title","DemoScreen","SignUp","Users","PrimaryNavigator","headerShown","gestureEnabled","WelcomeScreen","exitRoutes","canExit","routeName","includes"],"mappings":"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","sourcesContent":["/**\n * This is the navigator you will modify to display the logged-in screens of your app.\n * You can use RootNavigator to also display an auth flow or other user flows.\n *\n * You'll likely spend most of your time in this file.\n */\nimport React, { useState, useEffect } from \"react\"\nimport { createStackNavigator } from \"@react-navigation/stack\"\nimport { createDrawerNavigator, DrawerItemList } from '@react-navigation/drawer'\nimport Feather from '@expo/vector-icons/Feather'\nimport { WelcomeScreen, DemoScreen, SignUp, Users } from \"../screens\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport AsyncStorage from \"@react-native-community/async-storage\"\nimport { SafeAreaView, Text, Image, View, Alert } from \"react-native\"\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\nimport { Icon, HeaderButton } from \"../components\"\nimport { color } from \"../theme/color\"\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\nimport { api } from \"../services/api\"\n\n/**\n * This type allows TypeScript to know what routes are defined in this navigator\n * as well as what properties (if any) they might take when navigating to them.\n *\n * If no params are allowed, pass through `undefined`. Generally speaking, we\n * recommend using your MobX-State-Tree store(s) to keep application state\n * rather than passing state through navigation params.\n *\n * For more information, see this documentation:\n *   https://reactnavigation.org/docs/params/\n *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator\n */\nexport type PrimaryParamList = {\n  welcome: undefined\n  demo: undefined\n  drawer: undefined\n  home: undefined\n  signUp: undefined\n  users: undefined\n}\n\n// Documentation: https://reactnavigation.org/docs/stack-navigator/\nconst Stack = createStackNavigator<PrimaryParamList>()\nconst Draw = createDrawerNavigator<PrimaryParamList>()\n\nexport function Drawer() {\n  const [user, setUser] = useState([])\n  const navigation = useNavigation()\n  function logout() {\n    AsyncStorage.clear()\n    navigation.navigate('welcome')\n  };\n\n  \n\n  useEffect(() => {\n    async function retrieveData() {\n        const myArray = await AsyncStorage.getItem('user')\n        if (myArray !== null) {\n          // We have data!!\n          const usuário = JSON.parse(myArray)\n          setUser(usuário)\n        }\n    };\n    retrieveData()\n  }, [])\n\n  const getPermissionAsync = async () => {\n    if (Constants.platform.ios) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== 'granted') {\n        Alert.alert('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n  };\n\n  const _pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [1, 1],\n        quality: 0,\n        base64:true\n      });\n\n      if (!result.cancelled) {\n        try{\n          const value = await AsyncStorage.getItem('id');\n          if (value != null) {\n            const response = await api.put(`/updateImage/${user.id}`, {\n              avatar: result.base64,\n              })\n            Alert.alert('Sucesso!!!', response.data.message)\n\n            const data = await api.get(`users/${user.id}`)\n            setUser(response.data.user)\n            }\n        }catch(error){\n          console.log(error)\n        }\n      }\n\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n\n  const customDrawerComponent = props => (\n    <SafeAreaView style={{ flex: 1, backgroundColor: color.palette.green }}>\n      <ScrollView>\n        <View style={{width: '100%', height: 80, alignItems: 'center', justifyContent: 'center', marginBottom: 15}}>\n          <TouchableOpacity onPress={_pickImage} style={{ width: 80, height: 80, borderRadius: 50 }}>\n            <Image\n              style={{ width: 80, height: 80, borderRadius: 50 }}\n              source={{ uri: `data:image/gif;base64,${user.avatar}` }}\n              resizeMode='contain'\n              resizeMethod='scale'\n            />\n          </TouchableOpacity>\n        </View>\n        <DrawerItemList {...props} />\n        \n        <TouchableOpacity onPress={()=>{}} style={{ height: 40, flexDirection: 'row', justifyContent: 'flex-start', width: '100%', paddingHorizontal: 17, marginTop: 15 }}>\n          <Feather name='dollar-sign' size={25} color='#FFF' />\n          <Text style={{ color: '#fff', fontWeight: '500', height: '100%', marginTop: 5, marginLeft: 35 }}>Entradas</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={logout} style={{ height: 40, flexDirection: 'row', justifyContent: 'flex-start', width: '100%', paddingHorizontal: 17, marginTop: 15 }}>\n          <Feather name='log-out' size={25} color='#FFF' />\n          <Text style={{ color: '#fff', fontWeight: '500', height: '100%', marginTop: 5, marginLeft: 35 }}>Sair</Text>\n        </TouchableOpacity>\n      </ScrollView>\n    </SafeAreaView>\n  )\n\n  return (\n    <Draw.Navigator initialRouteName=\"home\"\n      drawerPosition='right'\n      drawerContent= {customDrawerComponent}\n      drawerContentOptions={{\n        activeTintColor: '#fff' ,\n        inactiveTintColor: '#fff',\n        activeBackgroundColor: color.palette.cyan,\n\n        itemStyle: { marginVertical: 5, alignItems: \"flex-start\", justifyContent: \"center\" },\n        labelStyle: { \n          color: '#fff',\n          marginTop: 5 \n          },\n        \n        contentContainerStyle: { justifyContent: 'center' }\n      }}\n      drawerStyle={{\n        width: '65%'\n      }}\n      screenOptions={({ route }) => ({\n        drawerIcon: ({ color, size }) => {\n          let iconName\n          if (route.name === 'home') {\n            iconName = 'home'\n          } else if (route.name === 'signUp') {\n            iconName = 'user-plus'\n          } else if (route.name === 'users') {\n            iconName = 'users'\n          } \n\n          // You can return any component that you like here!\n          return <Feather name={iconName} size={size} color={color} />;\n        },\n      })}\n    >\n      <Draw.Screen name=\"home\" options={{ title: 'Início' }} component={DemoScreen} />\n      <Draw.Screen name=\"signUp\" options={{ title: 'Registrar Membro' }} component={SignUp} />\n      <Draw.Screen name=\"users\" options={{ title: 'Panda Team' }} component={Users} />\n    </Draw.Navigator>\n  )\n}\n\nexport function PrimaryNavigator() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        gestureEnabled: true,\n      }}\n    >\n      <Stack.Screen name=\"welcome\" component={WelcomeScreen} />\n      <Stack.Screen name=\"drawer\" component={Drawer} />\n    </Stack.Navigator>\n  )\n}\n\n/**\n * A list of routes from which we're allowed to leave the app when\n * the user presses the back button on Android.\n *\n * Anything not on this list will be a standard `back` action in\n * react-navigation.\n *\n * `canExit` is used in ./app/app.tsx in the `useBackButtonHandler` hook.\n */\nconst exitRoutes = [\"welcome\"]\nexport const canExit = (routeName: string) => exitRoutes.includes(routeName)\n"]},"metadata":{},"sourceType":"script"}
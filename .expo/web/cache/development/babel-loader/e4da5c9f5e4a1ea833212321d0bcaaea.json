{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Team = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _mobxReactLite = require(\"mobx-react-lite\");\n\nvar _components = require(\"../../components\");\n\nvar _theme = require(\"../../theme\");\n\nvar _api = require(\"../../services/api\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _reactNativeCheckBox = _interopRequireDefault(require(\"react-native-check-box\"));\n\nvar _reactNativeLoadingSpinnerOverlay = _interopRequireDefault(require(\"react-native-loading-spinner-overlay\"));\n\nvar _jsxFileName = \"/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/screens/team/team.tsx\";\nvar FULL = {\n  flex: 1,\n  backgroundColor: '#fff'\n};\nvar CONTAINER = {\n  flex: 1\n};\nvar CONTENT = {\n  flex: 1,\n  backgroundColor: _theme.color.palette.blue,\n  alignItems: 'center',\n  justifyContent: 'center'\n};\nvar BOLD = {\n  fontWeight: \"bold\"\n};\nvar HEADER = {\n  paddingTop: _theme.spacing[3],\n  paddingBottom: _theme.spacing[3],\n  paddingHorizontal: _theme.spacing[3],\n  backgroundColor: _theme.color.palette.cyan\n};\nvar HEADER_TITLE = {\n  fontSize: 18,\n  textAlign: \"center\",\n  letterSpacing: 1.5\n};\nvar INPUT = {\n  height: 45,\n  width: 280,\n  borderRadius: 8,\n  textAlign: 'center',\n  fontSize: 22,\n  marginTop: 12,\n  backgroundColor: '#E2E2E0'\n};\nvar ALERTCENTERED = {\n  flex: 1,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginTop: 22\n};\nvar ALERTTEXT = {\n  marginBottom: 15,\n  textAlign: \"center\",\n  fontWeight: '600',\n  fontSize: 20,\n  color: _theme.color.palette.lightGrey\n};\nvar ALERTVIEW = {\n  margin: 20,\n  backgroundColor: _theme.color.palette.white,\n  borderRadius: 20,\n  width: '90%',\n  height: 'auto',\n  borderWidth: 1,\n  borderColor: _theme.color.palette.lightGrey,\n  padding: 20,\n  alignItems: \"center\",\n  shadowColor: \"#000\",\n  shadowOffset: {\n    width: 0,\n    height: 2\n  },\n  shadowOpacity: 0.25,\n  shadowRadius: 3.84,\n  elevation: 5\n};\nvar HEADERMODAL = {\n  height: '10%',\n  width: '100%',\n  alignItems: 'flex-end',\n  justifyContent: 'center',\n  marginBottom: 20\n};\n\nvar timeToString = function timeToString(time) {\n  var date = new Date(time);\n  return date.toISOString().split('T')[0];\n};\n\nvar Team = (0, _mobxReactLite.observer)(function Team() {\n  var navigation = (0, _native.useNavigation)();\n\n  var goBack = function goBack() {\n    return navigation.goBack();\n  };\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      admin = _useState6[0],\n      setAdmin = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      spinner = _useState8[0],\n      setSpinner = _useState8[1];\n\n  var _useState9 = (0, _react.useState)([]),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      user = _useState10[0],\n      setUser = _useState10[1];\n\n  var hoje = new Date();\n  var isDrawerOpen = (0, _drawer.useIsDrawerOpen)();\n\n  function handleSubmit() {\n    var response;\n    return _regenerator.default.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name === '')) {\n              _context.next = 4;\n              break;\n            }\n\n            _reactNative.Alert.alert('Erro ao registrar!', 'Por favor, informe o nome do membro para continuarmos com o registro');\n\n            _context.next = 21;\n            break;\n\n          case 4:\n            if (!(email === '')) {\n              _context.next = 8;\n              break;\n            }\n\n            _reactNative.Alert.alert('Erro ao registrar!', 'Por favor, informe o email do membro para continuarmos com o registro');\n\n            _context.next = 21;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            setSpinner(true);\n            _context.next = 12;\n            return _regenerator.default.awrap(_api.api.post('sign_up', {\n              name: name,\n              email: email,\n              admin: admin\n            }));\n\n          case 12:\n            response = _context.sent;\n\n            if (response.data.status === 200) {\n              _reactNative.Alert.alert('Sucesso!!!', response.data.message);\n\n              setEmail('');\n              setName('');\n              setAdmin(false);\n              setSpinner(false);\n            } else if (response.data.status === 400) {\n              setSpinner(false);\n\n              _reactNative.Alert.alert('Erro ao registrar!!!', response.data.error);\n            } else if (response.data.status === 401) {\n              setSpinner(false);\n\n              _reactNative.Alert.alert('Erro ao registrar!!!', response.data.error);\n            }\n\n            _context.next = 21;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](8);\n            console.log(_context.t0);\n\n            _reactNative.Alert.alert('Erro ao registrar!!!', 'Tente novamente');\n\n            setSpinner(false);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[8, 16]], Promise);\n  }\n\n  (0, _react.useEffect)(function () {\n    function retrieveData() {\n      var myArray, usuário;\n      return _regenerator.default.async(function retrieveData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('user'));\n\n            case 2:\n              myArray = _context2.sent;\n\n              if (myArray !== null) {\n                usuário = JSON.parse(myArray);\n                setUser(usuário);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    ;\n    retrieveData();\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: FULL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeLoadingSpinnerOverlay.default, {\n    visible: spinner,\n    textContent: 'Loading...',\n    animation: 'slide',\n    textStyle: {\n      color: '#FFF'\n    },\n    overlayColor: 'rgba(0,0,0,0.80)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_components.Screen, {\n    style: CONTAINER,\n    preset: \"scroll\",\n    statusBar: \"light-content\",\n    barBackground: isDrawerOpen ? _theme.color.palette.green : _theme.color.palette.cyan,\n    backgroundColor: _theme.color.palette.cyan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_components.Header, {\n    headerText: \"Cadastrar Novo Membro\",\n    style: HEADER,\n    titleStyle: HEADER_TITLE,\n    rightIcon: \"menu\",\n    onRightPress: function onRightPress() {\n      navigation.openDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: CONTENT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_components.Icon, {\n    name: \"newPanda\",\n    style: {\n      height: 100,\n      width: 200,\n      backgroundColor: _theme.color.transparent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_components.Text, {\n    style: {\n      color: '#fff',\n      marginVertical: 10,\n      textAlign: 'center',\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"Recrutamos pessoas fortes para um time excepcional!\"), _react.default.createElement(_reactNative.TextInput, {\n    style: INPUT,\n    multiline: false,\n    autoCapitalize: \"words\",\n    value: name,\n    onChangeText: setName,\n    placeholder: \"Nome Completo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    style: INPUT,\n    autoCompleteType: \"email\",\n    keyboardType: \"email-address\",\n    multiline: false,\n    autoCapitalize: \"none\",\n    value: email,\n    onChangeText: setEmail,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_components.Text, {\n    style: {\n      color: '#333',\n      marginVertical: 10,\n      textAlign: 'center',\n      fontSize: 18\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Este usu\\xE1rio \\xE9 um admin?\"), _react.default.createElement(_reactNativeCheckBox.default, {\n    style: {\n      padding: 10\n    },\n    onClick: function onClick() {\n      setAdmin(!admin);\n    },\n    isChecked: admin,\n    leftText: \"Este usuário é um adm?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_components.CommonButton, {\n    name: \"Registrar Menbro\",\n    style: {\n      width: '50%'\n    },\n    onPress: handleSubmit,\n    background: _theme.color.palette.cyan,\n    preset: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }))));\n});\nexports.Team = Team;","map":{"version":3,"sources":["/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/screens/team/team.tsx"],"names":["FULL","flex","backgroundColor","CONTAINER","CONTENT","color","palette","blue","alignItems","justifyContent","BOLD","fontWeight","HEADER","paddingTop","spacing","paddingBottom","paddingHorizontal","cyan","HEADER_TITLE","fontSize","textAlign","letterSpacing","INPUT","height","width","borderRadius","marginTop","ALERTCENTERED","ALERTTEXT","marginBottom","lightGrey","ALERTVIEW","margin","white","borderWidth","borderColor","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","HEADERMODAL","timeToString","time","date","Date","toISOString","split","Team","navigation","goBack","email","setEmail","name","setName","admin","setAdmin","spinner","setSpinner","user","setUser","hoje","isDrawerOpen","handleSubmit","Alert","alert","api","post","response","data","status","message","error","console","log","retrieveData","AsyncStorage","getItem","myArray","usuário","JSON","parse","green","openDrawer","transparent","marginVertical","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Image, ImageStyle, Platform, TextStyle, View, ViewStyle, AsyncStorage, Alert, TouchableOpacity, TextInput } from \"react-native\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { observer } from \"mobx-react-lite\"\nimport { BulletItem, Button, Header, Text, Screen, Wallpaper, Icon, CommonButton } from \"../../components\"\nimport { color, spacing } from \"../../theme\"\nimport { api } from \"../../services/api\"\nimport { save } from \"../../utils/storage\"\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\nimport CheckBox from 'react-native-check-box'\nimport Spinner from 'react-native-loading-spinner-overlay'\n\nconst FULL: ViewStyle = { flex: 1, backgroundColor: '#fff', }\nconst CONTAINER: ViewStyle = {\n  flex: 1,\n}\nconst CONTENT: ViewStyle = {\n  flex: 1,\n  backgroundColor: color.palette.blue,\n  alignItems: 'center',\n  justifyContent: 'center'\n}\nconst BOLD: TextStyle = { fontWeight: \"bold\" }\nconst HEADER: TextStyle = {\n  paddingTop: spacing[3],\n  paddingBottom: spacing[3] ,\n  paddingHorizontal: spacing[3],\n  backgroundColor: color.palette.cyan\n}\nconst HEADER_TITLE: TextStyle = {\n  fontSize: 18,\n  textAlign: \"center\",\n  letterSpacing: 1.5,\n}\nconst INPUT: TextStyle = {\n  height: 45,\n  width: 280,\n  borderRadius: 8,\n  textAlign: 'center',\n  fontSize: 22,\n  marginTop: 12,\n  backgroundColor: '#E2E2E0'\n}\n\nconst ALERTCENTERED: ViewStyle = {\n  flex: 1,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginTop: 22\n}\nconst ALERTTEXT: TextStyle = {\n  marginBottom: 15,\n  textAlign: \"center\",\n  fontWeight: '600',\n  fontSize: 20,\n  color: color.palette.lightGrey\n}\nconst ALERTVIEW: ViewStyle = {\n  margin: 20,\n  backgroundColor: color.palette.white,\n  borderRadius: 20,\n  width: '90%',\n  height: 'auto',\n  borderWidth: 1,\n  borderColor: color.palette.lightGrey,\n  padding: 20,\n  alignItems: \"center\",\n  shadowColor: \"#000\",\n  shadowOffset: {\n    width: 0,\n    height: 2\n  },\n  shadowOpacity: 0.25,\n  shadowRadius: 3.84,\n  elevation: 5\n}\nconst HEADERMODAL: ViewStyle = {\n  height: '10%',\n  width: '100%',\n  alignItems: 'flex-end',\n  justifyContent: 'center',\n  marginBottom: 20\n}\n\nconst timeToString = (time) => {\n  const date = new Date(time);\n  return date.toISOString().split('T')[0];\n}\n\nexport const Team = observer(function Team() {\n  const navigation = useNavigation()\n  const goBack = () => navigation.goBack()\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [admin, setAdmin] = useState(false)\n  const [spinner, setSpinner] = useState(false)\n  const [user, setUser] = useState([])\n  const hoje = new Date()\n  const isDrawerOpen = useIsDrawerOpen()\n\n  async function handleSubmit() {\n    if(name === '') {\n      Alert.alert('Erro ao registrar!', 'Por favor, informe o nome do membro para continuarmos com o registro')\n    }else if(email === '') {\n      Alert.alert('Erro ao registrar!', 'Por favor, informe o email do membro para continuarmos com o registro')\n    }else{\n      try {\n        setSpinner(true)\n        const response = await api.post('sign_up', {\n          name,\n          email,\n          admin\n        })\n        if(response.data.status === 200) {\n          Alert.alert('Sucesso!!!', response.data.message)\n          setEmail('')\n          setName('')\n          setAdmin(false)\n          setSpinner(false)\n        }else if(response.data.status === 400){\n          setSpinner(false)\n          Alert.alert('Erro ao registrar!!!', response.data.error)\n        }else if(response.data.status === 401){\n          setSpinner(false)\n          Alert.alert('Erro ao registrar!!!', response.data.error)\n        }\n\n      } catch (err) {\n        console.log(err)\n        Alert.alert('Erro ao registrar!!!', 'Tente novamente')\n        setSpinner(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    async function retrieveData() {\n      const myArray = await AsyncStorage.getItem('user')\n      if (myArray !== null) {\n        // We have data!!\n        const usuário = JSON.parse(myArray)\n        setUser(usuário)\n      }\n    };\n    retrieveData()\n  }, [])\n\n  return (\n    <View style={FULL}>\n      <Spinner\n        visible={spinner}\n        textContent={'Loading...'}\n        animation={'slide'}\n        textStyle={{ color: '#FFF' }}\n        overlayColor={'rgba(0,0,0,0.80)'}\n      />\n      <Screen style={CONTAINER} preset=\"scroll\" statusBar='light-content' barBackground={isDrawerOpen ? (color.palette.green) : color.palette.cyan} backgroundColor={color.palette.cyan}>\n        <Header\n          headerText='Cadastrar Novo Membro'\n          style={HEADER}\n          titleStyle={HEADER_TITLE}\n          rightIcon='menu'\n          onRightPress={()=>{navigation.openDrawer()}}\n        />\n        <View style={CONTENT}>\n          <Icon name='newPanda' style={{ height: 100, width: 200, backgroundColor: color.transparent }}/>\n          <Text style={{color: '#fff', marginVertical: 10, textAlign: 'center', fontSize: 18}}>Recrutamos pessoas fortes para um time excepcional!</Text>\n          <TextInput style={INPUT} multiline={false} autoCapitalize='words' value={name} onChangeText={setName} placeholder='Nome Completo' />\n          <TextInput style={INPUT} autoCompleteType='email' keyboardType='email-address' multiline={false} autoCapitalize='none' value={email} onChangeText={setEmail} placeholder='Email' />\n          <View style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'center'}}>\n            <Text style={{color: '#333', marginVertical: 10, textAlign: 'center', fontSize: 18}}>Este usuário é um admin?</Text>\n            <CheckBox\n              style={{padding: 10}}\n              onClick={()=>{setAdmin(!admin)}}\n              isChecked={admin}\n              leftText={\"Este usuário é um adm?\"}\n            />\n          </View>\n          <CommonButton name=\"Registrar Menbro\" style={{width: '50%'}} onPress={handleSubmit} background={color.palette.cyan} preset=\"primary\" />\n        </View>\n      </Screen>\n    </View>\n  )\n})"]},"metadata":{},"sourceType":"script"}
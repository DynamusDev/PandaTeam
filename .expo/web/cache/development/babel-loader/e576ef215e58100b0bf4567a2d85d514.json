{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DemoScreen = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _mobxReactLite = require(\"mobx-react-lite\");\n\nvar _components = require(\"../../components\");\n\nvar _theme = require(\"../../theme\");\n\nvar _reactNativeCalendars = require(\"react-native-calendars\");\n\nvar _drawer = require(\"@react-navigation/drawer\");\n\nvar _jsxFileName = \"/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/screens/demo-screen/demo-screen.tsx\";\n_reactNativeCalendars.LocaleConfig.locales['br'] = {\n  monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n  monthNamesShort: ['Jan.', 'Fev.', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul.', 'Ago', 'Set.', 'Out.', 'Nov.', 'Dez.'],\n  dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],\n  dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],\n  today: 'Hoje'\n};\n_reactNativeCalendars.LocaleConfig.defaultLocale = 'br';\nvar FULL = {\n  flex: 1,\n  backgroundColor: '#fff'\n};\nvar CONTAINER = {\n  flex: 1\n};\nvar CONTENT = {\n  flex: 1,\n  backgroundColor: '#fff'\n};\nvar BOLD = {\n  fontWeight: \"bold\"\n};\nvar HEADER = {\n  paddingTop: _theme.spacing[3],\n  paddingBottom: _theme.spacing[3],\n  paddingHorizontal: _theme.spacing[3],\n  backgroundColor: _theme.color.palette.cyan\n};\nvar HEADER_TITLE = {\n  fontSize: 20,\n  textAlign: \"center\",\n  letterSpacing: 1.5\n};\n\nvar timeToString = function timeToString(time) {\n  var date = new Date(time);\n  return date.toISOString().split('T')[0];\n};\n\nvar DemoScreen = (0, _mobxReactLite.observer)(function DemoScreen() {\n  var navigation = (0, _native.useNavigation)();\n\n  var goBack = function goBack() {\n    return navigation.goBack();\n  };\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = (0, _react.useState)([]),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      items = _useState6[0],\n      setItems = _useState6[1];\n\n  var _useState7 = (0, _react.useState)([]),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      events = _useState8[0],\n      setEvents = _useState8[1];\n\n  var hoje = new Date();\n  var isDrawerOpen = (0, _drawer.useIsDrawerOpen)();\n\n  function loadItems(day) {\n    return _regenerator.default.async(function loadItems$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setTimeout(function () {\n              for (var i = -15; i < 85; i++) {\n                var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n                var strTime = timeToString(time);\n\n                if (!items[strTime]) {\n                  items[strTime] = [];\n                  var numItems = Math.floor(Math.random() * 3 + 1);\n\n                  for (var j = 0; j < numItems; j++) {\n                    items[strTime].push({\n                      name: 'Evento - clique para ver a descrição',\n                      height: Math.max(50, Math.floor(Math.random() * 150))\n                    });\n                  }\n                }\n              }\n\n              var newItems = [];\n              Object.keys(items).forEach(function (key) {\n                newItems[key] = items[key];\n              });\n              setItems(newItems);\n            }, 1000);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var renderItem = function renderItem(item) {\n    return _react.default.createElement(_reactNative.TouchableOpacity, {\n      style: {\n        marginTop: 17,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: {\n        height: 60,\n        width: '100%',\n        padding: 5,\n        borderRadius: 5,\n        flexDirection: 'row',\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, _react.default.createElement(_components.Text, {\n      style: {\n        color: '#333'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, item.name)));\n  };\n\n  (0, _react.useEffect)(function () {\n    function retrieveData() {\n      var myArray, usuário;\n      return _regenerator.default.async(function retrieveData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('user'));\n\n            case 2:\n              myArray = _context2.sent;\n\n              if (myArray !== null) {\n                usuário = JSON.parse(myArray);\n                setUser(usuário);\n                setName(usuário.name.split(\" \")[0]);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    ;\n    retrieveData();\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: FULL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_components.Screen, {\n    style: CONTAINER,\n    preset: \"scroll\",\n    statusBar: \"light-content\",\n    barBackground: isDrawerOpen ? _theme.color.palette.green : _theme.color.palette.cyan,\n    backgroundColor: _theme.color.palette.cyan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_components.Header, {\n    headerText: \"Ol\\xE1, \" + name,\n    style: HEADER,\n    titleStyle: HEADER_TITLE,\n    rightIcon: \"menu\",\n    onRightPress: function onRightPress() {\n      navigation.openDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: CONTENT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_components.Text, {\n    style: {\n      color: '#333',\n      width: '100%',\n      textAlign: 'center',\n      fontSize: 20,\n      marginVertical: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Valor em caixa \", _react.default.createElement(_components.Text, {\n    style: {\n      fontWeight: '600',\n      color: '#333',\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 28\n    }\n  }, \"R$100,00\")), _react.default.createElement(_reactNativeCalendars.Agenda, {\n    items: items,\n    loadItemsForMonth: loadItems,\n    selected: hoje,\n    refreshing: false,\n    renderItem: renderItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }))));\n});\nexports.DemoScreen = DemoScreen;","map":{"version":3,"sources":["/Users/alexandrenascimento/Desktop/projetos/PandaTeam/Pandas/app/screens/demo-screen/demo-screen.tsx"],"names":["LocaleConfig","locales","monthNames","monthNamesShort","dayNames","dayNamesShort","today","defaultLocale","FULL","flex","backgroundColor","CONTAINER","CONTENT","BOLD","fontWeight","HEADER","paddingTop","spacing","paddingBottom","paddingHorizontal","color","palette","cyan","HEADER_TITLE","fontSize","textAlign","letterSpacing","timeToString","time","date","Date","toISOString","split","DemoScreen","navigation","goBack","user","setUser","name","setName","items","setItems","events","setEvents","hoje","isDrawerOpen","loadItems","day","setTimeout","i","timestamp","strTime","numItems","Math","floor","random","j","push","height","max","newItems","Object","keys","forEach","key","renderItem","item","marginTop","marginRight","width","padding","borderRadius","flexDirection","alignItems","justifyContent","retrieveData","AsyncStorage","getItem","myArray","usuário","JSON","parse","green","openDrawer","marginVertical"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Image, ImageStyle, Platform, TextStyle, View, ViewStyle, AsyncStorage, Alert, TouchableOpacity } from \"react-native\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { observer } from \"mobx-react-lite\"\nimport { BulletItem, Button, Header, Text, Screen, Wallpaper } from \"../../components\"\nimport { color, spacing } from \"../../theme\"\nimport {Calendar, CalendarList, Agenda, LocaleConfig} from 'react-native-calendars';\nimport { api } from \"../../services/api\"\nimport { save } from \"../../utils/storage\"\nimport { useIsDrawerOpen } from '@react-navigation/drawer';\n\nLocaleConfig.locales['br'] = {\n  monthNames: ['Janeiro','Fevereiro','Março','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'],\n  monthNamesShort: ['Jan.','Fev.','Mar','Abr','Mai','Jun','Jul.','Ago','Set.','Out.','Nov.','Dez.'],\n  dayNames: ['Domingo','Segunda','Terça','Quarta','Quinta','Sexta','Sábado'],\n  dayNamesShort: ['Dom','Seg','Ter','Qua','Qui','Sex','Sab'],\n  today: 'Hoje'\n};\nLocaleConfig.defaultLocale = 'br';\n\nconst FULL: ViewStyle = { flex: 1, backgroundColor: '#fff', }\nconst CONTAINER: ViewStyle = {\n  flex: 1,\n}\nconst CONTENT: ViewStyle = {\n  flex: 1,\n  backgroundColor: '#fff'\n}\nconst BOLD: TextStyle = { fontWeight: \"bold\" }\nconst HEADER: TextStyle = {\n  paddingTop: spacing[3],\n  paddingBottom: spacing[3] ,\n  paddingHorizontal: spacing[3],\n  backgroundColor: color.palette.cyan\n}\nconst HEADER_TITLE: TextStyle = {\n  fontSize: 20,\n  textAlign: \"center\",\n  letterSpacing: 1.5,\n}\n\nconst timeToString = (time) => {\n  const date = new Date(time);\n  return date.toISOString().split('T')[0];\n}\n\nexport const DemoScreen = observer(function DemoScreen() {\n  const navigation = useNavigation()\n  const goBack = () => navigation.goBack()\n  const [user, setUser] = useState([])\n  const [name, setName] = useState([])\n  const [items, setItems] = useState([])\n  const [events, setEvents] = useState([])\n  const hoje = new Date()\n  const isDrawerOpen = useIsDrawerOpen()\n\n  async function loadItems(day){\n    setTimeout(() => {\n      for (let i = -15; i < 85; i++) {\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\n        const strTime = timeToString(time);\n        if (!items[strTime]) {\n          items[strTime] = [];\n          const numItems = Math.floor(Math.random() * 3 + 1);\n          for (let j = 0; j < numItems; j++) {\n            items[strTime].push({\n              name: 'Evento - clique para ver a descrição',\n              height: Math.max(50, Math.floor(Math.random() * 150))\n            });\n          }\n        }\n      }\n      const newItems = [];\n      Object.keys(items).forEach(key => {newItems[key] = items[key];});\n      setItems(newItems)\n    }, 1000);\n  }\n\n  const renderItem = (item) => {\n    return(\n      <TouchableOpacity style={{\n                                marginTop: 17,\n                                marginRight: 10\n                              }}>\n        <View style={{\n                      height: 60,\n                      width: '100%',\n                      padding: 5,\n                      borderRadius: 5,\n                      flexDirection: 'row',\n                      backgroundColor: '#fff', \n                      alignItems: 'center', \n                      justifyContent: 'center'\n                      }}>\n          <Text style={{color: '#333'}}>{item.name}</Text>\n        </View>\n      </TouchableOpacity>\n    )\n  }\n\n  useEffect(() => {\n    async function retrieveData() {\n      const myArray = await AsyncStorage.getItem('user')\n      if (myArray !== null) {\n        // We have data!!\n        const usuário = JSON.parse(myArray)\n        setUser(usuário)\n        setName(usuário.name.split(\" \")[0])\n      }\n    };\n    retrieveData()\n  }, [])\n\n  return (\n    <View style={FULL}>\n      <Screen style={CONTAINER} preset=\"scroll\" statusBar='light-content' barBackground={isDrawerOpen ? (color.palette.green) : color.palette.cyan} backgroundColor={color.palette.cyan}>\n        <Header\n          headerText={`Olá, ${name}`}\n          style={HEADER}\n          titleStyle={HEADER_TITLE}\n          rightIcon='menu'\n          onRightPress={()=>{navigation.openDrawer()}}\n        />\n        <View style={CONTENT}>\n          <Text style={{\n            color: '#333', \n            width: '100%', \n            textAlign: 'center', \n            fontSize: 20, \n            marginVertical: 5\n            }}\n          >\n            Valor em caixa <Text style={{fontWeight: '600', color: '#333', fontSize: 20,}}>R$100,00</Text>\n          </Text>\n          <Agenda\n            items={items}\n            loadItemsForMonth={loadItems}\n            selected={hoje}\n            refreshing={false}\n            renderItem={renderItem}\n            />\n        </View>\n      </Screen>\n    </View>\n  )\n})"]},"metadata":{},"sourceType":"script"}